func is_palindrome(k: string) bool {
    j := len(k) - 1;
    i := 0;
    var is_palindrome bool = true;
    while (i <= j) {
        if (k[i] != k[j]) {
            is_palindrome = false;
        }
        i = i + 1;
        j = j - 1;
    }
    return is_palindrome;
}


func printStringList(my_list: list<string> ) int {
    put(my_list, 0, "Start");
    id := len(my_list);
    counter := 0;
    while (counter < id) {
        println(my_list[counter]);
        counter = counter + 1;
    }
    pop(my_list);
    return 0;
}


func createList(low: int, high: int) list<int> {
    var temp list<int> ;
    while (low <= high) {
        append(temp, low);
        low = low + 1;
    }
    return temp;
}


func main() int {
    var words list<string> = ["Marcus Blake", "racecar", "dogeeseseegod", "datyayyay"];
    count := 0;
    var palindromes list<string>;
    println(len(words));
    while (count < len(words)) {
        str := words[count];
        if (is_palindrome(str)) {
            append(palindromes, str);
        }
        count = count + 1;
    }
    printStringList(palindromes);
    a := createList(1,10);
    count = 0;
    while (count < len(a)) {
        println(a[count]);
        count = count + 1;
    }
    return 0;
}